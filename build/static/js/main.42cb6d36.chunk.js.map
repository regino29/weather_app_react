{"version":3,"sources":["components/Search.js","components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Search","prps","useState","title","setTitle","className","onChange","event","target","value","type","placeholder","onClick","city","stroke","fill","strokeWidth","viewBox","height","width","xmlns","d","Weather","props","loading","temp","icon","description","humidity","speed","i","data","weather","wind_speed","day","curDay","Date","getDay","src","alt","api","App","c","setC","setLoading","setData","search","a","fetch","then","res","json","result","fetchData","geo","lat","lon","useEffect","current","daily","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42cb6d36.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport './Search.css'\r\n\r\nconst Search = (prps) => {\r\n  const [title, setTitle] = useState('')\r\n\r\n  const changeCity = () => {\r\n    prps.city(title)\r\n    setTitle('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        onChange={(event) => setTitle(event.target.value)}\r\n        value={title}\r\n        type=\"text\"\r\n        className=\"search-bar\"\r\n        placeholder=\"Search\"\r\n      />\r\n      <button onClick={changeCity}>\r\n        <svg\r\n          stroke=\"currentColor\"\r\n          fill=\"currentColor\"\r\n          strokeWidth=\"0\"\r\n          viewBox=\"0 0 1024 1024\"\r\n          height=\"1.5em\"\r\n          width=\"1.5em\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0 0 11.6 0l43.6-43.5a8.2 8.2 0 0 0 0-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\"></path>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import './Weather.css'\r\n\r\nconst Weather = (props) => {\r\n  if (props.loading) return <h1>loading</h1>\r\n\r\n  let temp, icon, description, humidity, speed\r\n  let i = props.type - 1\r\n\r\n  if (props.type === 0) {\r\n    temp = props.data.temp\r\n    icon = props.data.weather[0].icon\r\n    description = props.data.weather[0].description\r\n    humidity = props.data.humidity\r\n    speed = props.data.wind_speed\r\n  } else {\r\n    temp = props.data[i].temp.day\r\n    icon = props.data[i].weather[0].icon\r\n    description = props.data[i].weather[0].description\r\n    humidity = props.data[i].humidity\r\n    speed = props.data[i].wind_speed\r\n  }\r\n\r\n\r\n  const days = [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"] ;\r\n  const curDay = new Date().getDay();\r\n\r\n  return (\r\n    <div className={`weather `}>\r\n      <h2>{days[(curDay-1+props.type)%7]}</h2>\r\n      <h1 className=\"temp\">{`${temp}Â°C`}</h1>\r\n      <div className=\"flex\">\r\n        <img\r\n          src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n          alt=\"\"\r\n          className=\"icon\"\r\n        />\r\n        <div className=\"description\">{description}</div>\r\n      </div>\r\n      <div className=\"humidity\">{`Humidity: ${humidity}%`}</div>\r\n      <div className=\"wind\">{`Wind speed: ${speed} km/h`}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weather\r\n","import './App.css'\nimport Search from './components/Search'\nimport Weather from './components/Weather'\nimport { useState, useEffect } from 'react'\n\nconst api = {\n  key: '1ea4a48ba1c9e89c6d1a5e9077ad6693',\n  base: 'https://api.openweathermap.org/data/2.5/onecall?',\n}\n\nfunction App() {\n  const [c, setC] = useState('larisa')\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState({})\n\n  const search = async () => {\n    setLoading(true)\n\n    fetch(\n      `http://api.openweathermap.org/geo/1.0/direct?q=${c}&limit=5&appid=${api.key}`,\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        fetchData(result)\n      })\n  }\n\n  const fetchData = (geo) => {\n    fetch(\n      `${api.base}lat=${geo[0].lat}&lon=${geo[0].lon}&units=metric&exclude=hourly&appid=${api.key}`,\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        setData(result)\n        setLoading(false)\n      })\n  }\n\n  useEffect(() => {\n    search()\n  }, [c])\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"card\">\n          <Search city={setC}></Search>\n          <h2 className=\"city\">{`Weather in ${c}`}</h2>\n          <Weather data={data.current} loading={loading} type={0}></Weather>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"card\">\n          <Weather data={data.daily} loading={loading} type={1}></Weather>\n        </div>\n        <div className=\"card\">\n          <Weather data={data.daily} loading={loading} type={2}></Weather>\n        </div>\n        <div className=\"card\">\n          <Weather data={data.daily} loading={loading} type={3}></Weather>\n        </div>\n        <div className=\"card\">\n          <Weather data={data.daily} loading={loading} type={4}></Weather>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <React.StrictMode >\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}